# ingress-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
data:
  enable-opentelemetry: "true"
  opentelemetry-operation-name: "HTTP $request_method $uri"
  opentelemetry-trust-incoming-span: "true"
  otlp-collector-host: "alloy-receiver.monitoring.svc.cluster.local"
  otlp-collector-port: "4317"
  otel-max-queuesize: "2048"
  otel-schedule-delay-millis: "5000"
  otel-max-export-batch-size: "512"
  otel-export-timeout-millis: "30000"
  otel-sampler: "AlwaysOn"
  otel-sampler-ratio: "1.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
data:
  enable-opentelemetry: "true"
  opentelemetry-config: |
    {
      "service_name": "nginx-ingress",
      "service_version": "1.0.0",
      "service_instance_id": "minikube",
      "sampler": { "name": "AlwaysOn" },
      "exporter": { "otlp": { "endpoint": "http://k8s-monitoring-alloy-receiver.monitoring.svc.cluster.local:4317" } }
    }
  use-forwarded-headers: "true"
  compute-full-forwarded-for: "true"
  log-format-escape-json: "true"
  log-format-upstream: |
    {
      "timestamp": "$time_iso8601",
      "requestID":    "$req_id",
      "traceID":      "$opentelemetry_trace_id",
      "spanID":       "$opentelemetry_span_id",
      "proxyUpstreamName": "$proxy_upstream_name",
      "httpRequest": {
        "requestMethod":"$request_method",
        "requestUrl":   "$host$request_uri",
        "status":       $status,
        "latency":      "$request_time"
      }
    }
